import subprocess
import logging

class HydraIntegration:
    def __init__(self):
        """
        Initializes the Hydra integration.
        """
        self.logger = logging.getLogger(__name__)

    def run_hydra(self, target, service, username, password_file, ports=None, additional_options=None):
        """
        Executes a brute-force attack using Hydra.

        :param target: The target IP address or domain.
        :param service: The service to attack (e.g., ssh, ftp, http).
        :param username: The username for the attack.
        :param password_file: Path to the password file.
        :param ports: (Optional) Specific port of the service.
        :param additional_options: (Optional) List of additional options for Hydra.
        :return: Output from the Hydra command.
        """
        command = ["hydra", "-l", username, "-P", password_file]

        if ports:
            command += ["-s", str(ports)]
        
        if additional_options:
            command += additional_options

        command += [target, service]

        try:
            self.logger.info(f"Executing command: {' '.join(command)}")
            result = subprocess.run(command, capture_output=True, text=True, check=True)
            self.logger.info(f"Hydra completed for {target} on service {service}")
            return result.stdout
        except subprocess.CalledProcessError as e:
            self.logger.error(f"Error executing Hydra: {e}")
            return e.output
